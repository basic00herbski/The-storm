<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Render
draw_set_colour(c_white);
draw_set_halign(fa_center);
with (obj_players) {
    if (alive) {
        // Player 1
        if (tag == "p1") {
            draw_sprite(spr_player_health, hearts, view_xview[0]+72, view_yview[0]+72);
            draw_text_transformed(room_width/2, 72, "" +string(obj_players.wins), 1, 1, image_angle);
        // Player 2
        }else if (tag == "p2") {
            draw_sprite(spr_player_health, hearts, view_xview[0]+72, view_yview[0]+72*2);
            draw_text_transformed(room_width/2, 72+25, "" +string(obj_players.wins), 1, 1, image_angle);
        // Player 3
        }else if (tag == "p3") {
            draw_sprite(spr_player_health, hearts, view_xview[0]+1596-192, view_yview[0]+72);
            draw_text_transformed(room_width/2, 72+25*2, "" +string(obj_players.wins), 1, 1, image_angle);
        // Player 4
        }else if (tag == "p4") {
            draw_sprite(spr_player_health, hearts, view_xview[0]+1596-192, view_yview[0]+72*2);
            draw_text_transformed(room_width/2, 72+25*3, "" +string(obj_players.wins), 1, 1, image_angle);
        }
    }
}


/// Draw health bar
with (obj_players) {
    if (alive) {
        if (index == 0) {
            draw_sprite(spr_player_health, hearts, view_xview[0]+72, view_yview[0]+72);
        }else if (index == 1) {
            draw_sprite(spr_player_health, hearts, view_xview[0]+72, view_yview[0]+72*2);
        }else if (index == 2) {
            draw_sprite(spr_player_health, hearts, view_xview[0]+1596-192, view_yview[0]+72);
        }else if (index == 3) {
            draw_sprite(spr_player_health, hearts, view_xview[0]+1596-192, view_yview[0]+72*2);
        }
    }
}
//draw_sprite(spr_player_health, obj_player.hearts, view_xview[0]+72, view_yview[0]+72);
//draw_sprite(spr_player_health, obj_player2.hearts, view_xview[0]+1596-192, view_yview[0]+72);

//draw_text_transformed(500, 50, "index: " + string(obj_player.index), 2, 2, image_angle);

/*if (obj_enemy.atkQuad) {
    draw_text_transformed(900, 0, "Enemy Quad Attacking.", 1, 1, image_angle);
}else{
    draw_text_transformed(900, 0, "Enemy Quad not Attacking.", 1, 1, image_angle);
}

if (obj_enemy.atkQuadDelay) {
    draw_text_transformed(900, 28, "Enemy Quad Attack on cooldown... " +string(obj_enemy.quadDelayTimer/60), 1, 1, image_angle);
}else{
    draw_text_transformed(900, 28, "Enemy Quad Attack up.", 1, 1, image_angle);
}

if (obj_enemy.attack) {
    draw_text_transformed(0, 120, "Attacking", 2, 2, image_angle);
}else{
    draw_text_transformed(0, 120, "Not attacking", 2, 2, image_angle);
}

if (obj_player.moveDown) {
    draw_text_transformed(500, 120, "Moving down", 2, 2, image_angle);
}else{
    draw_text_transformed(500, 120, "Not moving down", 2, 2, image_angle);
}

draw_rectangle(obj_player.x, obj_player.y, obj_player.x+32, obj_player.y+32, true);
draw_rectangle(obj_enemy.x, obj_enemy.y, obj_enemy.x+32, obj_enemy.y+32, true);*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize Player

// Image speed
image_speed = 0.2;

// Variables
moveL = false;
moveR = false;
moveU = false;
moveD = false;
moving = false;
facing = "right";

bullets = 3;
b = -1;


shift = false;


// Get 4 keys to advance to the next level
keys = 0;

// Enemy kills
kills = 0;

// Score
score = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Update Player

// Handle movement
// Key Pressed
if keyboard_check_pressed(ord("A")) {
    moveL = true;
    moving = true;
}
if keyboard_check_pressed(ord("D")) {
    moveR = true;
    moving = true;
}
if keyboard_check_pressed(ord("W")) {
    moveU = true;
    moving = true;
}
if keyboard_check_pressed(ord("S")) {
    moveD = true;
    moving = true;
}
if keyboard_check_pressed(vk_shift) {
    shift = true;
}

// Key Released
if keyboard_check_released(ord("A")) {
    moveL = false;
}
if keyboard_check_released(ord("D")) {
    moveR = false;
}
if keyboard_check_released(ord("W")) {
    moveU = false;
}
if keyboard_check_released(ord("S")) {
    moveD = false;
}
if keyboard_check_released(vk_shift) {
    shift = false;
}

// Movement
if (moveL) {
    if !place_meeting(x - 4, y, obj_block) {
        if (!shift) {
            facing = "left";
            image_xscale = -1;
        }
        x -=4;
    }
}
if (moveR) {
    if !place_meeting(x + 4, y, obj_block) { 
        if (!shift) {
            facing = "right";
            image_xscale = 1;
        }
        x +=4;
    }
}
if (moveU) {
    if !place_meeting(x, y - 4, obj_block) { 
        if (!shift) {
            facing = "up";
        }
        y -=4;
    }
}
if (moveD) {
    if !place_meeting(x, y + 4, obj_block) {  
        if (!shift) {
            facing = "down";
        }
        y +=4;
    }
}

// Keep Player within room
x = clamp(x, 0, room_width);
y = clamp(y, 0, room_height);



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_key">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Add keys to Player
keys++;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (bullets &gt; 0) {
    b = instance_create(x, y, obj_firebolt);
    //bullets -=1;
    
    // Check direction
    if (facing == "right") {
        b.direction = 0;
    }else if (facing == "left") {
        b.direction = 180;
    }else if (facing == "down") {
        b.direction = 90;
    }else if (facing == "up") {
        b.direction = 270;
    }
    var angle = arctan2(mouse_y-y, mouse_x-x);
    angle = angle * (180/pi);
    b.vX = 11 * cos( (pi/180)*(angle) );
    b.vY = 11 * sin( (pi/180)*(angle) );
    
   audio_play_sound(snd_firebolt, 10, false);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>enemy_count = instance_number(obj_enemy);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Render GUI

// Texture, key
draw_sprite(spr_key, 0, 72-35, 72-11);

// Texture, slime
draw_sprite(spr_slime, 0, 72-35, 72+22-11);


// Player keys
draw_text_colour(72+7, 72, ""+string(keys), c_white, c_white, c_white, c_white, 255);

// Enemy kills
var temps = ""+string(kills)+"/"+string(enemy_count);
draw_text_colour(72+7, 72+22, temps, c_white, c_white, c_white, c_white, 255);

// Score text
draw_text_colour(72-32, 72+55, "Score "+string(score), c_white, c_white, c_white, c_white, 255);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
